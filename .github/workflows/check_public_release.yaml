name: Check Release

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.extractBranch.outputs.branch }}
      version: ${{ steps.alphaVersion.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Extract branch name
        run: |
          echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"
          echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extractBranch
      - name: Retrieve Alpha Patch Version
        if: ${{ github.event.label.name == vars.PUBLISH_AND_E2E_LABEL }}
        run: |
          currentVersion=$(awk '/version/{gsub(/("|",)/,"",$2);print $2}' lerna.json)
          semver=( ${currentVersion//./ } )
          echo "version=${semver[0]}.${semver[1]}.$((semver[2] + 1))-alpha.$(date '+%Y%m%d%H%M')" >> "$GITHUB_OUTPUT"
        id: alphaVersion
  check-release-public-version:
    needs: get-version
    uses: ./.github/workflows/~reusable_public_publish.yaml
    with:
      TAG: alpha
      VERSION: ${{ needs.get-version.outputs.version }}
      BRANCH: ${{ needs.get-version.outputs.branch }}
      ENVIRONMENT: alpha_release
    secrets:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
      SLACK_WEB_HOOK: ${{ secrets.SLACK_WEB_HOOK }}
      G_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      APP_ID: ${{ secrets.APP_ID }}
      APP_KEY: ${{ secrets.APP_KEY }}
