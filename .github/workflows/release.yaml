name: RELEASE

on:
  push:
    branches:
      - FLEXY-4848-use-github-actions

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.alphaVersion.outputs.version }}
      branch: ${{ steps.extract_branch.outputs.branch }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install project dependencies
        run: npm i
      - name: Run linter
        run: npm run lint:fix
      - name: Run Tests
        run: npm run test:ci
        env:
          TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID_linux }}
          TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN_linux }}
          NODE_OPTIONS: --no-experimental-fetch
          CI: ""
      - name: Build packages
        run: npm run build
      - name: Codecov report
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Extract branch name
        run: |
          echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"
          echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch
      - name: Retrieve Alpha Patch Version
        run: |
          currentVersion=$(awk '/version/{gsub(/("|",)/,"",$2);print $2}' lerna.json)
          semver=( ${currentVersion//./ } )
          echo "version=${semver[0]}.${semver[1]}.$((semver[2] + 1))-alpha.$(date '+%Y%m%d%H%M')" >> "$GITHUB_OUTPUT"
        id: alphaVersion

  publish-alpha-version:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
      - name: Install dependencies
        run: npm i
      - name: Publish Alpha Version
        run: npm run publish:alpha $VERSION
        env:
          VERSION: ${{needs.build-and-test.outputs.version}}
          BRANCH: ${{needs.build-and-test.outputs.branch}}
          CIRCLE_BRANCH: ${{needs.build-and-test.outputs.branch}}
          TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID_linux }}
          TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN_linux }}
          NODE_OPTIONS: --no-experimental-fetch
          CI: ""
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

  e2e-node16:
    needs: [ build-and-test,  publish-alpha-version ]
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    env:
      PACKAGE_VERSION: ${{needs.build-and-test.outputs.version}}
      BRANCH: ${{needs.build-and-tes.outputs.branch}}
      CONSOLE_EMAIL: ${{ secrets.CONSOLE_EMAIL }}
      CONSOLE_PASSWORD: ${{ secrets.CONSOLE_PASSWORD }}
      CONSOLE_EMAIL_linux: ${{ secrets.CONSOLE_EMAIL_linux }}
      TWILIO_ACCOUNT_SID_linux: ${{ secrets.TWILIO_ACCOUNT_SID_linux }}
      TWILIO_AUTH_TOKEN_linux: ${{ secrets.TWILIO_AUTH_TOKEN_linux }}
      CONSOLE_EMAIL_win32: ${{ secrets.CONSOLE_EMAIL_win32 }}
      TWILIO_ACCOUNT_SID_win32: ${{ secrets.TWILIO_ACCOUNT_SID_win32 }}
      TWILIO_AUTH_TOKEN_win32: ${{ secrets.TWILIO_AUTH_TOKEN_win32 }}
      CONSOLE_EMAIL_darwin: ${{ secrets.CONSOLE_EMAIL_darwin }}
      TWILIO_ACCOUNT_SID_darwin: ${{ secrets.TWILIO_ACCOUNT_SID_darwin }}
      TWILIO_AUTH_TOKEN_darwin: ${{ secrets.TWILIO_AUTH_TOKEN_darwin }}
      NPM_IGNORE_PREFIX: ${{ vars.NPM_IGNORE_PREFIX }}
      FLEX_UI_VERSION: latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install project dependencies
        run: npm i
      - name: Build packages
        run: npm run build
      - name: Run e2e tests - JS
        run: |
          cd packages/flex-plugin-e2e-tests
          npm run start
        env:
          TS: false
      - name: Run e2e tests - TS
        run: |
          cd packages/flex-plugin-e2e-tests
          npm run start
        env:
          TS: true



