"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var flex_dev_utils_1 = require("flex-dev-utils");
var utils_1 = require("../utils");
/**
 * Prints the successful message of a plugin deployment
 */
var deploySuccessful = function (logger) { return function (name, availability, deployedData) {
    var defaultName = "Autogenerated Release " + Date.now();
    var topic = utils_1.getTopic('flex:plugins:create-configuration');
    logger.newline();
    logger.success("\uD83D\uDE80 Plugin (" + availability + ") **" + name + "**@**" + deployedData.nextVersion + "** was successfully deployed using Plugins API");
    logger.newline();
    // update this description
    logger.info('**Next Steps:**');
    logger.info(flex_dev_utils_1.singleLineString('Run {{$ twilio flex:plugins:release', "\\-\\-plugin " + name + "@" + deployedData.nextVersion, "\\-\\-name \"" + defaultName + "\"", "\\-\\-description \"" + topic.defaults.description + "\"}}", 'to enable this plugin on your Flex application'));
    logger.newline();
}; };
/**
 * Warns about having legacy plugins
 */
// eslint-disable-next-line @typescript-eslint/no-unused-vars
var warnHasLegacy = function (logger) { return function () {
    var cmd = flex_dev_utils_1.coloredStrings.code('$ twilio flex:plugins:upgrade-plugin --remove-legacy-plugin');
    flex_dev_utils_1.boxen.warning("You have a legacy bundle of this plugin. Remove it by running " + cmd);
}; };
// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
exports.default = (function (logger) { return ({
    deploySuccessful: deploySuccessful(logger),
    warnHasLegacy: warnHasLegacy(logger),
}); });
//# sourceMappingURL=deploy.js.map